{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/manage/manage.component.ts","./src/app/components/manage/manage.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/summary/summary.component.ts","./src/app/components/summary/summary.component.html","./src/app/data-center/alert/alert.component.ts","./src/app/data-center/alert/alert.component.html","./src/app/data-center/data-center.module.ts","./src/app/data-center/data-dashboard/data-dashboard.component.ts","./src/app/data-center/data-dashboard/data-dashboard.component.html","./src/app/data-center/metric/metric.component.ts","./src/app/data-center/metric/metric.component.html","./src/app/data-center/nodes-detail/nodes-detail.component.ts","./src/app/data-center/nodes-detail/nodes-detail.component.html","./src/app/data-center/nodes-row/nodes-row.component.ts","./src/app/data-center/nodes-row/nodes-row.component.html","./src/app/data-center/nodes/nodes.component.ts","./src/app/data-center/nodes/nodes.component.html","./src/app/invoice/customer-form/customer-form.component.ts","./src/app/invoice/customer-form/customer-form.component.html","./src/app/invoice/customer/customer.component.ts","./src/app/invoice/customer/customer.component.html","./src/app/invoice/customers/customers.component.ts","./src/app/invoice/customers/customers.component.html","./src/app/invoice/hours-control/hours-control.component.ts","./src/app/invoice/hours-control/hours-control.component.html","./src/app/invoice/invoice-form/invoice-form.component.ts","./src/app/invoice/invoice-form/invoice-form.component.html","./src/app/invoice/invoice.module.ts","./src/app/invoice/invoice/invoice.component.ts","./src/app/invoice/invoice/invoice.component.html","./src/app/invoice/invoices/invoices.component.ts","./src/app/invoice/invoices/invoices.component.html","./src/app/invoice/model/customer.model.ts","./src/app/invoice/model/invoice.model.ts","./src/app/invoice/service/customers/customers.service.ts","./src/app/invoice/service/invoices/invoices.service.ts","./src/app/invoice/service/rest/rest.service.ts","./src/app/invoice/validators/hours.validator.ts","./src/app/services/auth.guard.ts","./src/app/services/auth.service.ts","./src/app/services/login.service.ts","./src/app/services/stocks.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ManageComponent } from './components/manage/manage.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { DataDashboardComponent } from './data-center/data-dashboard/data-dashboard.component';\nimport { CustomersComponent } from './invoice/customers/customers.component';\nimport { CustomerComponent } from './invoice/customer/customer.component';\nimport { CustomerFormComponent } from './invoice/customer-form/customer-form.component';\nimport { InvoicesComponent } from './invoice/invoices/invoices.component';\nimport { InvoiceFormComponent } from './invoice/invoice-form/invoice-form.component';\nimport { InvoiceComponent } from './invoice/invoice/invoice.component';\nimport { AuthGuard } from './services/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent\n  },\n  {\n    path: 'manage',\n    component: ManageComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n  },\n  {\n    path: 'datacenter',\n    component: DataDashboardComponent,\n  },\n  {\n    path: 'customers',\n    component: CustomersComponent,\n    canActivate: [AuthGuard]\n  },\n  { path: 'invoices', component: InvoicesComponent, canActivate: [AuthGuard] },\n  { path: 'invoices/create', component: InvoiceFormComponent },\n  { path: 'invoices/:invoiceId', component: InvoiceComponent },\n  { path: 'invoices/:invoiceId/edit', component: InvoiceFormComponent },\n  { path: 'customers', component: CustomersComponent },\n  { path: 'customers/create', component: CustomerFormComponent },\n  { path: 'customers/:customerId', component: CustomerComponent },\n  { path: 'customers/:customerId/edit', component: CustomerFormComponent },\n  { path: '', pathMatch: 'full', redirectTo: '/invoices' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {}\n","<div>\n  <mat-toolbar color=\"primary\">\n    <div fxShow=\"true\" fxHide.gt-sm=\"true\">\n      <button mat-icon-button (click)=\"sidenav.toggle()\">\n        <mat-icon>menu</mat-icon>\n      </button>\n    </div>\n\n    <a mat-button class=\"companyName\" routerLink=\"/\">\n      <span>StockTrack</span>\n    </a>\n    <span class=\"example-spacer\"></span>\n    <div fxShow=\"true\" fxHide.lt-md=\"true\">\n      <a mat-button routerLink=\"/\">Dashboard</a>\n      <a mat-button routerLink=\"/manage\">Manage</a>\n      <a mat-button routerLink=\"/customers\">Customers</a>\n      <a mat-button routerLink=\"/invoices\">Invoices</a>\n      <a mat-button routerLink=\"/datacenter\">DataCenter</a>\n      <a mat-button routerLink=\"/login\">Login</a>\n    </div>\n\n  </mat-toolbar>\n  <mat-sidenav-container fxFlexFill class=\"example-container\">\n    <mat-sidenav color=\"primary\" #sidenav fxLayout=\"column\" mode=\"over\" opened=\"false\" fxHide.gt-sm=\"true\">\n      <div fxLayout=\"column\">\n        <a mat-button routerLink=\"/\">Dashboard</a>\n        <a mat-button routerLink=\"/manage\">Manage</a>\n        <a mat-button routerLink=\"/customers\">Customers</a>\n        <a mat-button routerLink=\"/invoices\">Invoices</a>\n        <a mat-button routerLink=\"/datacenter\">DataCenter</a>\n        <a mat-button routerLink=\"/login\">Login</a>\n      </div>\n    </mat-sidenav>\n    <mat-sidenav-content fxFlexFill>\n      <router-outlet></router-outlet>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { StocksService } from './services/stocks.service';\nimport { CustomersService } from './invoice/service/customers/customers.service';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SummaryComponent } from './components/summary/summary.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ManageComponent } from './components/manage/manage.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { InvoiceModule } from './invoice/invoice.module';\nimport { DataCenterModule } from './data-center/data-center.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { RouterModule } from '@angular/router';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from '@angular/material/input';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SummaryComponent,\n    DashboardComponent,\n    ManageComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    RouterModule,\n    InvoiceModule,\n    DataCenterModule,\n    MatGridListModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n  providers: [StocksService, CustomersService],\n  bootstrap: [AppComponent],\n\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { StocksService, StockInterface } from '../../services/stocks.service';\n\n@Component({\n  selector: 'dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent implements OnInit {\n  stocks: Array<StockInterface>;\n  symbols: Array<string>;\n\n  constructor(private service: StocksService) {\n    this.symbols = service.get();\n  }\n\n  ngOnInit() {\n    this.readStockData();\n  }\n\n  readStockData() {\n    this.service\n      .load(this.symbols)\n      .subscribe((stocks) => (this.stocks = stocks));\n  }\n}\n","<div class=\"container mt-2\">\n  <div\n      class=\"\"\n      *ngIf=\"!stocks\"\n      style=\"text-align: center;\"\n    >\n      Loading\n    </div>\n  <mat-grid-list cols=\"2\" rowHeight=\"2:1\">\n    <mat-grid-tile *ngFor=\"let stock of stocks\">\n      <summary [stock]=\"stock\"></summary>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { LoginService } from '../../services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n\n  loginForm: FormGroup = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl(''),\n  });\n  username: any;\n  password: any;\n\n  constructor(private service: LoginService) { }\n\n  login() {\n    this.username = this.loginForm.get('username').value;\n    this.password = this.loginForm.get('password').value;\n    console.log(this.username, this.password);\n  }\n}\n","<mat-card>\n    <mat-card-title>Login</mat-card-title>\n    <mat-card-content>\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n          <p>\n            <mat-form-field>\n              <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\n            </mat-form-field>\n          </p>\n          <p>\n            <mat-form-field>\n              <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\n            </mat-form-field>\n          </p>\n            <div class=\"button\">\n              <button type=\"submit\" mat-button>Login</button>\n            </div>\n        </form>\n    </mat-card-content>\n    <p>No Account? <a routerLink=\"/register\"> Register</a></p>\n\n</mat-card>","import { Component } from \"@angular/core\";\nimport { StocksService } from \"src/app/services/stocks.service\";\n\n@Component({\n  selector: \"manage\",\n  templateUrl: \"./manage.component.html\",\n  styleUrls: [\"./manage.component.css\"],\n})\nexport class ManageComponent {\n  symbols: Array<string>;\n  stock: string;\n\n  constructor(private service: StocksService) {\n    this.symbols = service.get();\n  }\n\n  add() {\n    this.symbols = this.service.add(this.stock.toUpperCase());\n    this.stock = \"\";\n  }\n\n  remove(symbol) {\n    this.symbols = this.service.remove(symbol);\n  }\n}\n","<div class=\"container\" class=\"manage-form\">\n    <form (submit)=\"add()\">\n      <mat-form-field>\n        <input\n          name=\"stock\"\n          [(ngModel)]=\"stock\"\n          matInput\n          type=\"text\"\n          placeholder=\"Add Stock\"\n        />\n      </mat-form-field>\n    </form>\n    <table\n      class=\"manage-form\"\n    >\n      <tbody>\n        <tr *ngFor=\"let symbol of symbols\">\n          <td class=\"manage-td\">{{ symbol }}</td>\n          <td>\n            <button mat-button color=\"warn\" (click)=\"remove(symbol)\">\n              Remove\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup ({\n      firstname: new FormControl(''),\n      lastname: new FormControl(''),\n      username: new FormControl(''),\n      password: new FormControl('')\n    });\n  }\n\n  register(){\n    console.log('register!!')\n  }\n}\n","<mat-card>\n    <mat-card-title>Register</mat-card-title>\n    <mat-card-content>\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n          <p>\n            <mat-form-field>\n              <input type=\"text\" matInput placeholder=\"Firstname\" formControlName=\"firstname\">\n            </mat-form-field>\n          </p>\n          <p>\n            <mat-form-field>\n              <input type=\"text\" matInput placeholder=\"Lastname\" formControlName=\"lastname\">\n            </mat-form-field>\n          </p>\n          <p>\n            <mat-form-field>\n              <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\n            </mat-form-field>\n          </p>\n\n          <p>\n            <mat-form-field>\n              <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\n            </mat-form-field>\n          </p>\n            <div class=\"button\">\n              <button type=\"submit\" mat-button>Register</button>\n            </div>\n        </form>\n    </mat-card-content>\n    <p>Aleady have account?  <a routerLink=\"/login\">Login</a></p>\n</mat-card>","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"summary\",\n  templateUrl: \"./summary.component.html\",\n  styleUrls: [\"./summary.component.css\"],\n})\nexport class SummaryComponent {\n  @Input() stock: any;\n\n  isNegative() {\n    return this.stock && this.stock.change < 0;\n  }\n\n  isPositive() {\n    return this.stock && this.stock.change > 0;\n  }\n}\n","<mat-card class=\"stock-card\" [ngClass]=\"{ increase: isPositive(), decrease: isNegative() }\">\n  <span>\n    <mat-card-content>\n        <h4 style=\"color: #fff; margin: 0;\">\n            {{ stock?.symbol?.toUpperCase() }}<br />\n            {{ stock?.lastTradePriceOnly | currency: 'USD':'symbol':'.2' }}<br />\n            {{ stock?.change | currency: 'USD':'symbol':'.2' }} ({{\n              stock?.changeInPercent | percent: '.2'\n            }})\n        </h4>\n    </mat-card-content>\n  </span>\n</mat-card>","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css'],\n})\nexport class AlertComponent {\n  @Input() date: Date;\n}\n","<div class=\"container mt-2\">\n  <div class=\"alert alert-warning\" role=\"alert\">\n    The data was refreshed at {{ date | date: 'medium' }}\n  </div>\n</div>\n","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AlertComponent } from './alert/alert.component';\nimport { MetricComponent } from './metric/metric.component';\nimport { NodesComponent } from './nodes/nodes.component';\nimport { NodesDetailComponent } from './nodes-detail/nodes-detail.component';\nimport { NodesRowComponent } from './nodes-row/nodes-row.component';\nimport { DataDashboardComponent } from './data-dashboard/data-dashboard.component';\n\n@NgModule({\n  entryComponents: [NodesDetailComponent, AlertComponent],\n  declarations: [AlertComponent, MetricComponent, NodesComponent, NodesDetailComponent, NodesRowComponent, DataDashboardComponent],\n  imports: [\n    CommonModule,\n    NgbModule\n  ],\n  schemas: [NO_ERRORS_SCHEMA]\n})\nexport class DataCenterModule { }\n","import {\n  Component,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ViewContainerRef,\n  ViewChild,\n} from '@angular/core';\nimport { AlertComponent } from '../alert/alert.component';\n\ninterface Metric {\n  used: number;\n  available: number;\n}\n\ninterface Node {\n  name: string;\n  cpu: Metric;\n  mem: Metric;\n}\n\n@Component({\n  selector: 'app-datadashboard',\n  templateUrl: './data-dashboard.component.html',\n  styleUrls: ['./data-dashboard.component.css'],\n})\nexport class DataDashboardComponent implements OnInit, OnDestroy {\n  cpu: Metric;\n  mem: Metric;\n  cluster1: Node[];\n  cluster2: Node[];\n  interval: any;\n\n  alertRef: ComponentRef<AlertComponent>;\n  @ViewChild('alertBox', { read: ViewContainerRef }) alertBox: ViewContainerRef;\n  constructor(private ComponentFactoryResolver: ComponentFactoryResolver) {}\n\n  alert(date) {\n    if (!this.alertRef) {\n      const alertComponent = this.ComponentFactoryResolver.resolveComponentFactory(\n        AlertComponent\n      );\n      this.alertRef = this.alertBox.createComponent(alertComponent);\n    }\n\n    this.alertRef.instance.date = date;\n    this.alertRef.changeDetectorRef.detectChanges();\n\n    setTimeout(() => this.destroyAlert(), 5000);\n  }\n\n  destroyAlert() {\n    if (this.alertRef) {\n      this.alertRef.destroy();\n      delete this.alertRef;\n    }\n  }\n\n  ngOnDestroy(): void {\n    clearInterval(this.interval);\n  }\n\n  ngOnInit(): void {\n    this.generateData();\n\n    this.interval = setInterval(() => {\n      this.refresh();\n    }, 15000);\n  }\n\n  refresh(): void {\n    this.generateData();\n    this.alert(new Date());\n  }\n\n  generateData(): void {\n    this.cluster1 = [];\n    this.cluster2 = [];\n    this.cpu = { used: 0, available: 0 };\n    this.mem = { used: 0, available: 0 };\n    for (let i = 1; i < 4; i++) this.cluster1.push(this.randomNode(i));\n    for (let i = 4; i < 7; i++) this.cluster2.push(this.randomNode(i));\n  }\n\n  private randomNode(i): Node {\n    let node = {\n      name: 'node' + i,\n      cpu: { available: 16, used: this.randomInteger(0, 16) },\n      mem: { available: 48, used: this.randomInteger(0, 48) },\n    };\n    this.cpu.used += node.cpu.used;\n    this.cpu.available += node.cpu.available;\n    this.mem.used += node.mem.used;\n    this.mem.available += node.mem.available;\n    return node;\n  }\n\n  private randomInteger(min: number = 0, max: number = 100): number {\n    return Math.floor(Math.random() * max) + 1;\n  }\n}\n","<div class=\"container mt-2\">\n  <button class=\"btn btn-info\" type=\"button\" (click)=\"refresh()\">\n    Reload\n  </button>\n</div>\n\n<div class=\"container mt-2\">\n  <ng-template #alertBox></ng-template>\n</div>\n\n<div class=\"container mt-2\">\n  <div class=\"row\">\n    <app-metric class=\"col-sm-6\" [used]=\"cpu.used\" [available]=\"cpu.available\">\n      <metric-title>CPU</metric-title>\n      <metric-description>utilization of CPU cores</metric-description>\n    </app-metric>\n    <app-metric class=\"col-sm-6\" [used]=\"mem.used\" [available]=\"mem.available\">\n      <metric-title>Memory</metric-title>\n      <metric-description>utilization of memory in GB</metric-description>\n    </app-metric>\n  </div>\n</div>\n\n<div class=\"container mt-2\">\n  <div class=\"card card-block\">\n    <div class=\"card-body\">\n      <nav class=\"navbar navbar-dark bg-inverse mb-1\">\n        <h1 class=\"navbar-brand mb-0\">Cluster 1</h1>\n      </nav>\n      <table app-nodes class=\"table table-hover\">\n        <tr app-nodes-row *ngFor=\"let node of cluster1\" [node]=\"node\"></tr>\n      </table>\n      <nav class=\"navbar navbar-dark bg-inverse mb-1\">\n        <h1 class=\"navbar-brand mb-0\">Cluster 2</h1>\n      </nav>\n      <table app-nodes class=\"table table-hover\">\n        <tr app-nodes-row *ngFor=\"let node of cluster2\" [node]=\"node\"></tr>\n      </table>\n    </div>\n  </div>\n</div>\n\n<template ngbModalContainer></template>\n","import { Component, Input, ChangeDetectionStrategy, OnChanges} from '@angular/core';\n\n@Component({\n  selector: 'app-metric',\n  templateUrl: './metric.component.html',\n  styleUrls: ['./metric.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MetricComponent implements OnChanges {\n\n  @Input('used') value: number = 0;\n  @Input('available') max: number = 100;\n\n  ngOnChanges(changes) {\n    if (changes.value&& isNaN(changes.value.currentValue)) this.value = 0\n    if (changes.max && isNaN(changes.max.currentValue)) this.max - 0\n  }\n\n  isDanger() {\n    return this.value / this.max > 0.7;\n  }\n}\n","<div class=\"card card-block\">\n  <div class=\"card-body\">\n    <nav\n      class=\"navbar navbar-dark bg-primary mb-1\"\n      [ngClass]=\"{ 'bg-danger': isDanger(), 'bg-success': !isDanger() }\"\n    >\n      <h1 class=\"navbar-brand mb-0\">\n        <ng-content select=\"metric-title\"></ng-content>\n      </h1>\n    </nav>\n\n    <h4 class=\"card-title\">\n      {{ value }}/{{ max }} ({{ value / max | percent: '1.0-2' }})\n    </h4>\n    <p class=\"card-text\">\n      <ng-content select=\"metric-description\"></ng-content>\n    </p>\n    <ngb-progressbar\n      [value]=\"value\"\n      [max]=\"max\"\n      [type]=\"isDanger() ? 'danger' : 'success'\"\n    ></ngb-progressbar>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n@Component({\n  selector: 'app-nodes-detail',\n  templateUrl: './nodes-detail.component.html',\n  styleUrls: ['./nodes-detail.component.css'],\n})\nexport class NodesDetailComponent {\n  @Input() node;\n\n  constructor(public activeModal: NgbActiveModal) {}\n\n  isDanger(prop) {\n    return this.node[prop].used / this.node[prop].available > 0.7;\n  }\n\n  getType(prop) {\n    return this.isDanger(prop) ? 'danger' : 'success';\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title\">{{ node.name }}</h4>\n  <button\n    type=\"button\"\n    class=\"close\"\n    aria-label=\"Close\"\n    (click)=\"activeModal.dismiss()\"\n  >\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body container\">\n  <div class=\"col-xs-6\">\n    <app-metric [used]=\"node.cpu.used\" [available]=\"node.cpu.available\">\n      <metric-title>CPU</metric-title>\n    </app-metric>\n  </div>\n  <div class=\"col-xs-6\">\n    <app-metric [used]=\"node.mem.used\" [available]=\"node.mem.available\">\n      <metric-title>Memory</metric-title>\n    </app-metric>\n  </div>\n</div>\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NodesDetailComponent } from '../nodes-detail/nodes-detail.component';\n\n@Component({\n  selector: '[app-nodes-row]',\n  templateUrl: './nodes-row.component.html',\n  styleUrls: ['./nodes-row.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NodesRowComponent {\n  @Input() node: any;\n\n  isDanger(prop) {\n    return this.node[prop].used / this.node[prop].available / 0.7;\n  }\n\n  constructor(private modalService: NgbModal) {}\n\n  open(node) {\n    const modal = this.modalService.open(NodesDetailComponent);\n    modal.componentInstance.node = node;\n  }\n}\n","<th scope=\"row\">{{ node.name }}</th>\n<td [class.table-danger]=\"isDanger('cpu')\">\n  {{ node.cpu.used }}/{{ node.cpu.available }}\n</td>\n<td [class.table-danger]=\"isDanger('cpu')\">\n  ({{ node.cpu.used / node.cpu.available | percent }})\n</td>\n<td [class.table-danger]=\"isDanger('mem')\">\n  {{ node.mem.used }}/{{ node.mem.available }}\n</td>\n<td [class.table-danger]=\"isDanger('mem')\">\n  ({{ node.mem.used / node.mem.available | percent }})\n</td>\n<td><button class=\"btn btn-secondary\" (click)=\"open(node)\">View</button></td>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: '[app-nodes]',\n  templateUrl: './nodes.component.html',\n  styleUrls: ['./nodes.component.css'],\n})\nexport class NodesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<thead>\n  <tr>\n    <th>Node</th>\n    <th [colSpan]=\"2\">CPU</th>\n    <th [colSpan]=\"2\">Memory</th>\n    <th>Details</th>\n  </tr>\n</thead>\n<ng-content></ng-content>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { TdLoadingService } from '@covalent/core/loading';\nimport { TdDialogService } from '@covalent/core/dialogs';\nimport { Customer } from '../model/customer.model';\nimport { CustomersService } from '../service/customers/customers.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-customer-form',\n  templateUrl: './customer-form.component.html',\n  styleUrls: ['./customer-form.component.css']\n})\nexport class CustomerFormComponent implements OnInit {\n  customer: Customer;\n  constructor(\n    private loadingService: TdLoadingService,\n    private router: Router,\n    private dialogService: TdDialogService,\n    private customersService: CustomersService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.loadingService.register('customer');\n    this.route.params.pipe(\n      map((params: Params) => params.customerId)\n      ).subscribe( customerId => {\n        if (customerId) {\n          this.customersService\n            .get<Customer>(customerId)\n            .subscribe(customer => {\n              this.customer = customer;\n              this.loadingService.resolve('customer');\n            });\n        } else {\n          this.customer = new Customer();\n          this.loadingService.resolve('customer');\n        }\n      });\n  }\n\n  save() {\n    if (this.customer.id) {\n      this.customersService\n        .update<Customer>(this.customer.id, this.customer)\n        .subscribe(response => {\n          this.viewCustomer(response.id);\n        });\n    } else {\n      this.customersService\n        .create<Customer>(this.customer)\n        .subscribe(response => {\n          this.viewCustomer(response.id);\n        });\n    }\n  }\n\n  delete() {\n    this.dialogService\n      .openConfirm({\n        message: 'Are you sure you want to delete this customer?',\n        title: 'Confirm',\n        acceptButton: 'Delete'\n      })\n      .afterClosed()\n      .subscribe((accept: boolean) => {\n        if (accept) {\n          this.loadingService.register('customer');\n          this.customersService.delete(this.customer.id).subscribe(response => {\n            this.loadingService.resolve('customer');\n            this.customer.id = null;\n            this.cancel();\n          });\n        }\n      });\n  }\n\n  cancel() {\n    if (this.customer.id) {\n      this.router.navigate(['/customers', this.customer.id]);\n    } else {\n      this.router.navigateByUrl('/customers');\n    }\n  }\n\n  private viewCustomer(id: number) {\n    this.router.navigate(['/customers', id]);\n  }\n}\n","<div *tdLoading=\"'customer'\">\n    <form *ngIf=\"customer\" #form=\"ngForm\" (ngSubmit)=\"save()\">\n      <mat-card>\n        <mat-card-header>Edit Customer</mat-card-header>\n        <mat-card-content>\n          <mat-form-field>\n            <input\n              name=\"customer\"\n              matInput\n              placeholder=\"Customer Name\"\n              [(ngModel)]=\"customer.name\"\n              required\n              #name=\"ngModel\"\n            />\n            <mat-error *ngIf=\"name.touched && name.invalid\">\n              Name is required\n            </mat-error>\n          </mat-form-field>\n          <mat-form-field>\n            <input\n              name=\"email\"\n              matInput\n              type=\"email\"\n              placeholder=\"Email\"\n              [(ngModel)]=\"customer.email\"\n              required\n              #email=\"ngModel\"\n            />\n            <mat-error *ngIf=\"email.touched && email.invalid\">\n              A valid email is required.\n            </mat-error>\n          </mat-form-field>\n          <mat-form-field>\n            <input\n              name=\"phone\"\n              matInput\n              type=\"tel\"\n              placeholder=\"Phone\"\n              [(ngModel)]=\"customer.phone\"\n              required\n              phone\n              #phone=\"ngModel\"\n            />\n\n            <mat-error *ngIf=\"phone.touched && phone.errors?.phone\">\n              Not a valid phone number\n            </mat-error>\n          </mat-form-field>\n          {{ customer | json }}\n        </mat-card-content>\n        <mat-card-actions>\n          <button type=\"button\" mat-button (click)=\"delete()\" *ngIf=\"customer.id\">\n            Delete\n          </button>\n          <button type=\"button\" mat-button (click)=\"cancel()\">Cancel</button>\n          <button\n            type=\"submit\"\n            mat-raised-button\n            color=\"primary\"\n            [disabled]=\"form.invalid\"\n          >\n            Save\n          </button>\n        </mat-card-actions>\n      </mat-card>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params} from '@angular/router';\nimport { Customer } from 'src/app/invoice/model/customer.model';\nimport { CustomersService } from 'src/app/invoice/service/customers/customers.service';\nimport { map, switchMap } from 'rxjs/operators';\nimport { TdLoadingService } from '@covalent/core/loading';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n  customer: Customer;\n  constructor(\n    private customersService: CustomersService,\n    private route: ActivatedRoute,\n    private loadingService: TdLoadingService) { }\n\n  ngOnInit(): void {\n    //this.loadingService.register('customer');\n    this.route.params.pipe(\n      map((params: Params) => params.customerId),\n      switchMap((customerId: number) => this.customersService.get<Customer>(customerId)))\n      .subscribe(\n        customer => {this.customer = customer;\n        //this.loadingService.resolve('customer');\n      });\n  }\n}\n","<div *tdLoading=\"'customer'\">\n  <mat-list *ngIf=\"customer\">\n    <h3 matSubheader>Customer ID: {{customer.id}}</h3>\n    <mat-list-item>\n      <mat-icon mat-list-icon>perm_identity</mat-icon>\n      <h4 mat-line>{{customer.name}}</h4>\n      <p mat-line>Customer</p>\n    </mat-list-item>\n    <mat-list-item>\n      <mat-icon mat-list-icon>email</mat-icon>\n      <h4 mat-line>{{customer.email}}</h4>\n      <p mat-line>Email</p>\n    </mat-list-item>\n    <mat-list-item>\n      <mat-icon mat-list-icon>phone</mat-icon>\n      <h4 mat-line>{{customer.phone}}</h4>\n      <p mat-line>Phone</p>\n    </mat-list-item>\n  </mat-list>\n  <button mat-fab routerLink=\"/customers/{{customer?.id}}/edit\">\n    <mat-icon>mode_edit</mat-icon>\n  </button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Customer } from '../model/customer.model';\nimport { CustomersService } from '../service/customers/customers.service';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n  customers: Customer[];\n  constructor(private customersService: CustomersService) { }\n\n  ngOnInit(): void {\n    this.customersService.query<Array<Customer>>({ sort: 'created', order: 'desc' })\n      .subscribe(customers => {\n        this.customers = customers;\n      })\n  }\n}\n","<div>\n    <mat-list *ngIf=\"customers\">\n        <h3 matSubheader>Customers</h3>\n        <mat-list-item *ngFor=\"let customer of customers\" routerLink=\"/customers/{{customer.id}}\">\n            <mat-icon mat-list-icon>note</mat-icon>\n            <h4 mat-line>{{customer.name}}</h4>\n            <p mat-line> {{customer.email}} </p>\n        </mat-list-item>\n    </mat-list>\n    <button mat-fab class=\"mat-fab-bottom-right fixed\" routerLink=\"/customers/create\">\n        <mat-icon>add</mat-icon>\n    </button>\n</div>","import { Component, forwardRef, OnInit } from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  FormControl\n} from '@angular/forms';\n\nimport { HoursValidator } from '../validators/hours.validator';\n\n@Component({\n  selector: 'app-hours-control',\n  templateUrl: './hours-control.component.html',\n  styleUrls: ['./hours-control.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => HoursControlComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => HoursControlComponent),\n      multi: true\n    }\n  ]\n})\nexport class HoursControlComponent implements ControlValueAccessor {\n\n  hours = 0;\n  validateFn = HoursValidator;\n  onChange = (v: any) => {};\n\n  update() {\n    this.onChange(this.hours);\n  }\n\n  keypress($event) {\n    if ($event.key === 'ArrowUp') {\n      this.setValue(0.25);\n    } else if ($event.key === 'ArrowDown') {\n      this.setValue(-0.25);\n    }\n  }\n\n  setValue(change: number) {\n    this.hours += change;\n    this.update();\n  }\n\n  validate(control: FormControl) {\n    return this.validateFn(control);\n  }\n\n  writeValue(value: any) {\n    if (value !== undefined) {\n      this.hours = value;\n    }\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched() {}\n\n}\n","<mat-form-field>\n  <input\n    name=\"hours\"\n    matInput\n    type=\"number\"\n    placeholder=\"Hours\"\n    [(ngModel)]=\"hours\"\n    hours\n    (keyup)=\"keypress($event)\"\n    #control=\"ngModel\"\n    (change)=\"update()\"\n  />\n  <mat-error *ngIf=\"control.touched && control.invalid\">\n    Hours must be a number in increments of .25\n  </mat-error>\n</mat-form-field>\n<div layout=\"row\">\n  <button type=\"button\" mat-button flex (click)=\"setValue(1)\">+ 1</button>\n  <button type=\"button\" mat-button flex (click)=\"setValue(0.25)\">+ .25</button>\n  <button type=\"button\" mat-button flex (click)=\"setValue(-0.25)\">- .25</button>\n  <button type=\"button\" mat-button flex (click)=\"setValue(-1)\">- 1</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { TdLoadingService } from '@covalent/core/loading';\nimport { TdDialogService } from '@covalent/core/dialogs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { map } from 'rxjs/operators';\nimport { Invoice } from '../model/invoice.model';\nimport { Customer } from '../model/customer.model';\nimport { InvoicesService } from '../service/invoices/invoices.service';\nimport { CustomersService } from '../service/customers/customers.service';\nimport { HoursValidator } from '../validators/hours.validator';\nimport { Observable, combineLatest } from 'rxjs';\n\n@Component({\n  selector: 'app-invoice-form',\n  templateUrl: './invoice-form.component.html',\n  styleUrls: ['./invoice-form.component.css']\n})\nexport class InvoiceFormComponent implements OnInit {\n  invoiceForm: FormGroup;\n  invoice: Invoice;\n  customer: Customer;\n  customers: Customer[];\n  total = 0;\n\n  constructor(\n    private loadingService: TdLoadingService,\n    private invoicesServie: InvoicesService,\n    private router: Router,\n    private dialogService: TdDialogService,\n    private customersService: CustomersService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute\n  ) {\n    this.invoiceForm = this.formBuilder.group({\n      id: [''],\n      service: ['', Validators.required],\n      customerId: ['', Validators.required],\n      rate: ['', Validators.required],\n      hours: ['', [Validators.required, HoursValidator]],\n      date: ['', Validators.required],\n      paid: ['']\n    });\n   }\n\n  ngOnInit(): void {\n    this.loadingService.register('invoice');\n    this.loadingService.register('customers');\n\n    this.customersService.query<Array<Customer>>().subscribe(customers => {\n      this.customers = customers;\n      this.loadingService.resolve('customers');\n    });\n\n    this.route.params.pipe(\n      map((params: Params) => params.invoiceId)\n    ).subscribe(invoiceId => {\n      if (invoiceId) {\n        this.invoicesServie.get<Invoice>(invoiceId).subscribe(invoice => {\n          this.invoiceForm.setValue(invoice);\n          this.invoice = invoice;\n          this.loadingService.resolve('invoice');\n        });\n      } else {\n        this.invoice = new Invoice();\n        this.loadingService.resolve('invoice');\n      }\n    });\n\n    combineLatest(\n      this.invoiceForm.get('rate').valueChanges,\n      this.invoiceForm.get('hours').valueChanges\n    ).subscribe(([rate = 0, hours = 0]) => {\n      this.total = rate * hours;\n    });\n  }\n\n  save() {\n    if (this.invoice.id) {\n      this.invoicesServie\n        .update<Invoice>(this.invoice.id, this.invoiceForm.value)\n        .subscribe(response => {\n          this.viewInvoice(response.id);\n        });\n    } else {\n      this.invoicesServie\n        .create<Invoice>(this.invoiceForm.value)\n        .subscribe(response => {\n          this.viewInvoice(response.id);\n        });\n    }\n  }\n\n  delete() {\n    this.dialogService\n      .openConfirm({\n        message: 'Are you sure you want to delete this invoice?',\n        title: 'Confirm',\n        acceptButton: 'Delete'\n      })\n      .afterClosed()\n      .subscribe((accept: boolean) => {\n        if (accept) {\n          this.loadingService.register('invoice');\n          this.invoicesServie.delete(this.invoice.id).subscribe(response => {\n            this.loadingService.resolve('invoice');\n            this.invoice.id = null;\n            this.cancel();\n          });\n        }\n      });\n  }\n\n  cancel() {\n    if (this.invoice.id) {\n      this.router.navigate(['/invoices', this.invoice.id]);\n    } else {\n      this.router.navigateByUrl('/invoices')\n    }\n  }\n\n  private viewInvoice(id: number) {\n    this.router.navigate(['/invoices', id]);\n  }\n}\n","<div *tdLoading=\"'invoice'\">\n  <form *ngIf=\"invoice\" [formGroup]=\"invoiceForm\" (ngSubmit)=\"save()\">\n    <mat-card>\n      <mat-card-header>Edit Invoice</mat-card-header>\n      <mat-card-content>\n        <mat-form-field>\n          <input\n            name=\"service\"\n            matInput\n            type=\"text\"\n            placeholder=\"Service\"\n            formControlName=\"service\"\n          />\n          <mat-error\n            *ngIf=\"\n              invoiceForm.get('service').touched &&\n              invoiceForm.get('service').invalid\n            \"\n          >\n            Service is required\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <input\n            matInput\n            [matDatepicker]=\"picker\"\n            placeholder=\"Choose a date\"\n            formControlName=\"date\"\n          />\n          <!-- <button type=\"button\" matSuffix [matDatepickerToggle]=\"picker\"></button> -->\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-error\n            *ngIf=\"\n              invoiceForm.get('date').touched && invoiceForm.get('date').invalid\n            \"\n          >\n            Date is required\n          </mat-error>\n        </mat-form-field>\n        <mat-datepicker #picker></mat-datepicker>\n        <app-hours-control formControlName=\"hours\"></app-hours-control>\n        <mat-form-field>\n          <input\n            name=\"rate\"\n            matInput\n            type=\"number\"\n            placeholder=\"Rate\"\n            formControlName=\"rate\"\n          />\n          <mat-error\n            *ngIf=\"\n              invoiceForm.get('rate').touched && invoiceForm.get('rate').invalid\n            \"\n          >\n            Hourly rate is required\n          </mat-error>\n        </mat-form-field>\n        <div>\n          <mat-select\n            name=\"customerId\"\n            placeholder=\"Customer\"\n            formControlName=\"customerId\"\n          >\n            <mat-option\n              [value]=\"customer.id\"\n              *ngFor=\"let customer of customers\"\n              >{{ customer?.name }}</mat-option\n            >\n          </mat-select>\n        </div>\n        <div class=\"toggler\">\n          <mat-slide-toggle formControlName=\"paid\">Paid</mat-slide-toggle>\n        </div>\n        <div class=\"total\">Total: {{ total | currency: 'USD':true:'.2' }}</div>\n      </mat-card-content>\n      <mat-card-actions>\n        <button type=\"button\" mat-button (click)=\"delete()\" *ngIf=\"invoice.id\">\n          Delete\n        </button>\n        <button type=\"button\" mat-button (click)=\"cancel()\">Cancel</button>\n        <button\n          type=\"submit\"\n          mat-raised-button\n          color=\"primary\"\n          [disabled]=\"invoiceForm.invalid\"\n        >\n          Save\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CustomerComponent } from './customer/customer.component';\nimport { CustomersComponent } from './customers/customers.component';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { RouterModule } from '@angular/router';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { CovalentLoadingModule } from '@covalent/core/loading';\nimport { CustomerFormComponent } from './customer-form/customer-form.component';\nimport { CovalentDialogsModule } from '@covalent/core/dialogs';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { InvoiceComponent } from './invoice/invoice.component';\nimport { InvoicesComponent } from './invoices/invoices.component';\nimport { InvoiceFormComponent } from './invoice-form/invoice-form.component';\nimport { HoursControlComponent } from './hours-control/hours-control.component';\n\n@NgModule({\n  declarations: [\n    CustomerComponent,\n    CustomersComponent,\n    CustomerFormComponent,\n    InvoiceComponent,\n    InvoicesComponent,\n    InvoiceFormComponent,\n    HoursControlComponent],\n  exports: [\n    CustomerComponent,\n    CustomersComponent,\n    CustomerFormComponent,\n    InvoicesComponent,\n    InvoiceComponent,\n    InvoiceFormComponent,\n    HoursControlComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatListModule,\n    MatButtonModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    CovalentLoadingModule,\n    CovalentDialogsModule\n  ]\n})\nexport class InvoiceModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { TdLoadingService } from '@covalent/core/loading';\nimport { map, switchMap } from 'rxjs/operators';\nimport { Customer } from '../model/customer.model';\nimport { Invoice } from '../model/invoice.model';\nimport { CustomersService } from '../service/customers/customers.service';\nimport { InvoicesService } from '../service/invoices/invoices.service';\n\n@Component({\n  selector: 'app-invoice',\n  templateUrl: './invoice.component.html',\n  styleUrls: ['./invoice.component.css']\n})\nexport class InvoiceComponent implements OnInit {\n  invoice: Invoice;\n  customer: Customer;\n\n  constructor(\n    private loadingService: TdLoadingService,\n    private invoicesService: InvoicesService,\n    private customersService: CustomersService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.loadingService.register('invoice');\n    this.route.params.pipe(\n      map((params: Params) => params.invoiceId),\n      switchMap(invoiceId => this.invoicesService.get<Invoice>(invoiceId)),\n      map(invoice => {\n        this.invoice = invoice;\n        return invoice.customerId;\n      }),\n      switchMap(customerId => this.customersService.get<Customer>(customerId))\n    ).subscribe(customer => {\n      this.customer = customer;\n      this.loadingService.resolve('invoice');\n    })\n  }\n}\n","<div  *tdLoading=\"'invoice'\">\n  <mat-list *ngIf=\"invoice && customer\">\n    <h3 matSubheader>Invoice ID: {{invoice.id}}</h3>\n    <mat-list-item>\n      <mat-icon mat-list-icon *ngIf=\"invoice.paid\">done</mat-icon>\n      <mat-icon mat-list-icon *ngIf=\"!invoice.paid\">clear</mat-icon>\n      <h4 mat-line *ngIf=\"invoice.paid\">Payment Received</h4>\n      <h4 mat-line *ngIf=\"!invoice.paid\">Outstanding</h4>\n      <p mat-line>Payment Status</p>\n    </mat-list-item>\n    <mat-list-item>\n      <mat-icon mat-list-icon>done</mat-icon>\n      <h4 mat-line>{{invoice.service}}</h4>\n      <p mat-line>Service</p>\n    </mat-list-item>\n    <mat-list-item>\n      <mat-icon mat-list-icon>date_range</mat-icon>\n      <h4 mat-line>{{invoice.date | date}}</h4>\n      <p mat-line>Date</p>\n    </mat-list-item>\n    <mat-list-item>\n      <mat-icon mat-list-icon>schedule</mat-icon>\n      <h4 mat-line>{{invoice.hours}} hours at {{invoice.rate | currency:'USD':true:'.0'}}</h4>\n      <p mat-line>Hours and Rate</p>\n    </mat-list-item>\n    <mat-list-item>\n      <mat-icon mat-list-icon>attach_money</mat-icon>\n      <h4 mat-line>{{invoice.hours * invoice.rate | currency:'USD':true:'.0'}}</h4>\n      <p mat-line>Total Invoiced</p>\n    </mat-list-item>\n    <mat-list-item>\n      <mat-icon mat-list-icon>perm_identity</mat-icon>\n      <h4 mat-line>{{customer.name}}</h4>\n      <p mat-line>Customer</p>\n    </mat-list-item>\n  </mat-list>\n  <button mat-fab class=\"mat-fab-bottom-right fixed mat-accent mat-fab\" routerLink=\"/invoices/{{invoice?.id}}/edit\"><mat-icon>mode_edit</mat-icon></button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Invoice } from '../model/invoice.model';\nimport { InvoicesService } from '../service/invoices/invoices.service';\nimport { TdLoadingService } from '@covalent/core/loading';\n\n@Component({\n  selector: 'app-invoices',\n  templateUrl: './invoices.component.html',\n  styleUrls: ['./invoices.component.css']\n})\nexport class InvoicesComponent implements OnInit {\n  invoices: Invoice[];\n  constructor(\n    private loadingService: TdLoadingService,\n    private invoicesService : InvoicesService) { }\n\n  ngOnInit() {\n    this.loadingService.register('invoices');\n    this.invoicesService.query<Array<Invoice>>({sort: 'created', order: 'desc'})\n      .subscribe(invoices => {\n        this.invoices = invoices;\n        this.loadingService.resolve('invoices');\n      });\n  }\n\n}\n","<div *tdLoading=\"'invoices'\">\n    <mat-list>\n      <h3 matSubheader>Recent Invoices</h3>\n      <mat-list-item *ngFor=\"let invoice of invoices\" routerLink=\"/invoices/{{invoice.id}}\">\n        <mat-icon mat-list-icon>folder</mat-icon>\n        <h4 mat-line>{{invoice.service}}</h4>\n        <p mat-line> {{invoice.date | date}} </p>\n      </mat-list-item>\n    </mat-list>\n    <button mat-fab class=\"mat-fab-bottom-right fixed mat-accent mat-fab\" routerLink=\"/invoices/create\"><mat-icon>add</mat-icon></button>\n</div>","export class Customer {\n    email: string;\n    id: number;\n    name: string;\n    phone: string;\n}\n","export class Invoice {\n    customerId: number;\n    date: string;\n    hours: number;\n    id: number;\n    paid: boolean = false;\n    rate: number;\n    service: string;\n  }\n","import { Injectable } from '@angular/core';\nimport { RestService } from 'src/app/invoice/service/rest/rest.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomersService extends RestService {\n  resource: string = '/customers';\n}\n","import { Injectable } from '@angular/core';\nimport { RestService } from '../rest/rest.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvoicesService extends RestService{\n  resource: string = '/invoices';\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\ninterface Query {\n  limit?: number;\n  order?: string;\n  sort?: string;\n  embed?: string;\n  expand?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestService {\n  base: string = 'http://localhost:3000';\n  resource: string = '/';\n  type: any;\n\n  constructor(private http: HttpClient) { }\n\n  get url() {\n    return this.base + this.resource;\n  }\n\n  query<T>(query?: Query) {\n    let url = this.url;\n    if (query) {\n      url += `?${this.toQueryString(query)}`;\n    }\n\n    return this.http.get<T>(url);\n  }\n\n  get<T>(id: number) {\n    return this.http.get<T>(this.url + '/' + id);\n  }\n\n  create<T>(body: any) {\n    return this.http.post<T>(this.url, body);\n  }\n\n  update<T>(id: number, body: any) {\n    return this.http.put<T>(this.url + '/' + id, body);\n  }\n\n  delete<T>(id: number) {\n    return this.http.delete<T>(this.url + '/' + id);\n  }\n\n  private toQueryString(paramsObject) {\n    return Object\n      .keys(paramsObject)\n      .map(key => `_${encodeURIComponent(key)}=${encodeURIComponent(paramsObject[key])}`)\n      .join('&');\n  }\n}\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport function HoursValidator(control: AbstractControl): { [key: string]: any } {\n    return Number.isInteger(control.value * 4) ? null : { hour: true };\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router){}\n  canActivate(\n    _next: ActivatedRouteSnapshot,\n    _state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    var isAuthenticated = this.authService.getAuthStatus();\n    if (!isAuthenticated) {\n        this.router.navigate(['/login']);\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  getAuthStatus() {\n    return false;\n  }\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor() { }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\nlet stocks: Array<string> = [\"AAPL\", \"GOOG\", \"FB\", \"AMZN\", \"TWTR\"];\nlet service: string = \"https://angular2-in-action-api.herokuapp.com\";\n\nexport interface StockInterface {\n  symbol: string;\n  lastTradePriceOnly: number;\n  change: number;\n  changeInPercent: number;\n}\n@Injectable()\nexport class StocksService {\n  constructor(private http: HttpClient) {}\n\n  get() {\n    return stocks.slice();\n  }\n  add(stock) {\n    stocks.push(stock);\n    return this.get();\n  }\n  remove(stock) {\n    stocks.splice(stocks.indexOf(stock), 1);\n    return this.get();\n  }\n  load(symbols) {\n    if (symbols) {\n      return this.http.get<Array<StockInterface>>(\n        service + \"/stocks/snapshot?symbols=\" + symbols.join()\n      );\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}